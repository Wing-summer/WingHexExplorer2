<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language>
<language name="AngelScript" section="Sources" version="19" kateversion="5.79" extensions="*.as;*.angelscript" indenter="cstyle" style="C++"
          author="wingsummer" license="GPL" priority="99" >
    <highlighting>
        <list name="keywords">
            <item>abstract</item>
            <item>and</item>
            <item>break</item>
            <item>case</item>
            <item>cast</item>
            <item>catch</item>
            <item>class</item>
            <item>const</item>
            <item>continue</item>
            <item>default</item>
            <item>delete</item>
            <item>do</item>
            <item>else</item>
            <item>enum</item>
            <item>explicit</item>
            <item>external</item>
            <item>false</item>
            <item>final</item>
            <item>float</item>
            <item>for</item>
            <item>from</item>
            <item>funcdef</item>
            <item>function</item>
            <item>get</item>
            <item>if</item>
            <item>import</item>
            <item>in</item>
            <item>inout</item>
            <item>interface</item>
            <item>is</item>
            <item>mixin</item>
            <item>namespace</item>
            <item>not</item>
            <item>null</item>
            <item>or</item>
            <item>out</item>
            <item>override</item>
            <item>private</item>
            <item>property</item>
            <item>protected</item>
            <item>return</item>
            <item>set</item>
            <item>shared</item>
            <item>super</item>
            <item>switch</item>
            <item>this</item>
            <item>true</item>
            <item>try</item>
            <item>typedef</item>
            <item>while</item>
            <item>xor</item>
        </list>
        <list name="types">
            <item>void</item>
            <item>bool</item>
            <item>uint</item>
            <item>uint8</item>
            <item>uint16</item>
            <item>uint32</item>
            <item>uint64</item>
            <item>int</item>
            <item>double</item>
            <item>int8</item>
            <item>int16</item>
            <item>int32</item>
            <item>int64</item>
            <item>auto</item>
        </list>
        <contexts>
            <context attribute="Normal Text" lineEndContext="#stay" name="Normal">
                <keyword attribute="Keyword" context="#stay" String="keywords"/>
                <keyword attribute="Data Type" context="#stay" String="types" />
                <Float attribute="Float" context="Float Suffixes"/>
                <HlCOct attribute="Octal" context="#stay"/>
                <HlCHex attribute="Hex" context="#stay"/>
                <Int attribute="Decimal" context="Int Suffixes"/>

                <StringDetect attribute="Text Block" context="TextBlock" String="&quot;&quot;&quot;"/>
                <DetectChar attribute="String" context="StringDouble" char="&quot;"/>
                <DetectChar attribute="String" context="StringSingle" char="&apos;"/>

                <Detect2Chars attribute="Comment" context="MatchComment" char="/" char1="/" lookAhead="true"/>
                <Detect2Chars attribute="Comment" context="MatchComment" char="/" char1="*" lookAhead="true" />
                <DetectChar attribute="Symbol" context="#stay" char="{" beginRegion="block1"/>
                <DetectChar attribute="Symbol" context="#stay" char="}" endRegion="block1"/>
                <RegExpr attribute="Data Type" context="#stay" String="\bauto(?=\s+\w+)"/>
                <RegExpr attribute="Keyword" context="#stay" String="\b(?=\s+(?:class|interface|void)|(?=\s+(?:return|break))|(?:set|get)(?=\s*[;{])|(?=\s*::\s*\w+))"/>
                <RegExpr attribute="Function" context="#stay" String="\b[_\w][_\w\d]*(?=[\s]*[(])" />
                <DetectChar attribute="Symbol" context="Member" char="."/>
                <AnyChar attribute="Symbol" context="#stay" String=":!%&amp;()+,-/*&lt;=&gt;?[]|~^&#59;"/>
                <DetectChar attribute="Macro" context="Macro" char="#"/>
            </context>

            <context name="Float Suffixes" attribute="Float" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop">
                <AnyChar String="dDfFmM" attribute="Float" context="#pop"/>
            </context>
            <context name="Int Suffixes" attribute="Decimal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop">
                <StringDetect attribute="Decimal" context="#pop" String="UL" insensitive="true"/>
                <StringDetect attribute="Decimal" context="#pop" String="LU" insensitive="true"/>
                <AnyChar attribute="Decimal" context="#pop" String="ULul"/>
            </context>

            <context attribute="String" lineEndContext="#pop" name="StringDouble">
                <DetectChar context="StringEscapedChar" char="\" lookAhead="1"/>
                <DetectChar attribute="String" context="#pop" char="&quot;"/>
            </context>

            <context attribute="String" lineEndContext="#pop" name="StringSingle">
                <DetectChar context="StringEscapedChar" char="\" lookAhead="1"/>
                <DetectChar attribute="String" context="#pop" char="&apos;"/>
            </context>

            <context attribute="String" lineEndContext="#pop" name="StringEscapedChar">
                <HlCStringChar attribute="String Char" context="#pop"/>
                <RegExpr attribute="String Char" context="#pop" String="\\u+[0-9a-fA-F]{4}"/>
            </context>

            <context attribute="Text Block" lineEndContext="#stay" name="TextBlock">
                <DetectChar context="StringEscapedChar" char="\" lookAhead="1"/>
                <StringDetect attribute="Text Block" context="#pop" String="&quot;&quot;&quot;"/>
            </context>

            <context attribute="Normal Text" lineEndContext="#pop" name="Member" fallthrough="true" fallthroughContext="#pop">
                <RegExpr attribute="Function" context="#pop" String="\b[_\w][_\w\d]*(?=[\s]*)" />
            </context>

            <context attribute="Comment" lineEndContext="#pop" name="Commentar 1">
                <IncludeRules context="##Comments"/>
            </context>
            <context attribute="Comment" lineEndContext="#stay" name="Commentar 2">
                <Detect2Chars attribute="Comment" context="#pop" char="*" char1="/" endRegion="BlockComment"/>
                <IncludeRules context="##Comments"/>
            </context>
            <context name="MatchComment" attribute="Normal Text" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop">
                <IncludeRules context="##Doxygen" />
                <Detect2Chars attribute="Comment" context="#pop!Commentar 1" char="/" char1="/" />
                <Detect2Chars attribute="Comment" context="#pop!Commentar 2" char="/" char1="*" beginRegion="BlockComment" />
            </context>
            <context attribute="Decimal" lineEndContext="#pop" name="Decimal"/>
            <context attribute="Macro" lineEndContext="#pop" name="Macro">
                <Detect2Chars attribute="Comment" context="#pop" char="/" char1="/"/>
                <Detect2Chars attribute="Comment" context="#pop" char="/" char1="*" beginRegion="Comment"/>
            </context>
        </contexts>
        <itemDatas>
            <itemData name="Normal Text"  defStyleNum="dsNormal"/>
            <itemData name="Keyword"      defStyleNum="dsKeyword"/>
            <itemData name="Function"     defStyleNum="dsFunction"/>
            <itemData name="Data Type"    defStyleNum="dsDataType"/>
            <itemData name="Decimal"      defStyleNum="dsDecVal"/>
            <itemData name="Octal"        defStyleNum="dsBaseN"/>
            <itemData name="Hex"          defStyleNum="dsBaseN"/>
            <itemData name="Float"        defStyleNum="dsFloat"/>
            <itemData name="Char"         defStyleNum="dsString"/>
            <itemData name="String"       defStyleNum="dsString"/>
            <itemData name="Text Block"   defStyleNum="dsString"/>
            <itemData name="String Char"  defStyleNum="dsSpecialChar"/>
            <itemData name="Comment"      defStyleNum="dsComment"/>
            <itemData name="Symbol"       defStyleNum="dsOperator"/>
            <itemData name="Macro"        defStyleNum="dsPreprocessor"/>
        </itemDatas>
    </highlighting>
    <general>
        <comments>
            <comment name="singleLine" start="//" position="afterwhitespace"/>
            <comment name="multiLine" start="/*" end="*/" region="BlockComment" />
        </comments>
        <keywords casesensitive="1" />
    </general>
</language>
